---
# NOTE: only really works with full_environment inventory file

# NOTE: while it would be easier to synchronize files directly from one server to another,
# i cannot seem to get the synchronize module to cooperate without asking for a password on the server.
# so instead, i go through the trouble of bringing the desired file to the control,
# then pushing it to the desired destination(s)
- name: fetch backup file from server
  hosts: app_prod

  vars:
    backup_file: "{{ copy_backup_file }}"

  tasks:
    - name: fetch backup file from server
      fetch:
        src: "{{ backup_file }}"
        dest: "../db_backup/"
        flat: true

- name: stop app servers before restoring database
  hosts: app_not_prod
  become: true

  tasks:
    - name: stop play
      # NOTE:since the service module doesn't seem to be able to restart vireo,
      # we won't use it to stop it either
      # service: name=play state=stopped
      shell: "service play stop"

- name: deploy backup to other server(s)
  hosts: app_not_prod
  become: yes
  become_user: "{{ login_user }}"

  vars:
    backup_file: "{{ copy_backup_file }}"

  handlers:
    - include: handlers/reload_postgres.yml
    - include: handlers/restart_postgres.yml

  tasks:
    - name: install ansible postgres prereqs
      include: tasks/ansible_postgres_prereqs.yml

    - name: copy backup file to server
      copy:
        src: "../db_backup/{{ backup_file }}"
        dest: "~/{{ backup_file }}"

    - name: add pg_hba entry for database
      include: tasks/pg_hba_entry.yml
      vars:
        connection_type: "local"
        database: "{{ db_name }}"
        user: "{{ db_user }}"
        auth_method: "md5"
        state: "present"

    - name: add pgpass entry for database
      include: tasks/pgpass.yml
      vars:
        admin_user: "{{ login_user }}"
        admin_group: "{{ login_group }}"
        database: "{{ db_name }}"
        user: "{{ db_user }}"
        password: "{{ db_pass }}"
        state: "present"

    - name: restore db from backup
      include: tasks/restore_db.yml
      vars:
        database: "{{ db_name }}"
        user: "{{ db_user }}"
        file: "{{ backup_file }}"

    # TODO: review
    - name: remove pg_hba entry for database
      include: tasks/pg_hba_entry.yml
      vars:
        connection_type: "local"
        database: "{{ db_name }}"
        user: "{{ db_user }}"
        auth_method: "md5"
        state: "absent"

    - name: remove pgpass entry for database
      include: tasks/pgpass.yml
      vars:
        admin_user: "{{ login_user }}"
        admin_group: "{{ login_group }}"
        database: "{{ db_name }}"
        user: "{{ db_user }}"
        password: "{{ db_pass }}"
        state: "absent"

    - name: remove the backup file from the server
      file:
        path: "{{ backup_file }}"
        state: absent

- name: restart app servers after restoring database
  hosts: app_not_prod
  become: true

  tasks:
    - name: start play
      # NOTE: for some reason, the service module doesn't seem to work for vireo
      # service: name=play state=started
      shell: "service play start"
      register: result

    - name: check play status
      debug: var=result
